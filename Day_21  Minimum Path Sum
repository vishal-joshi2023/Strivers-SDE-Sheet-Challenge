#include <bits/stdc++.h> 
int fun(vector<vector<int>> &arr,int i,int j,vector<vector<int>> &dp){
    int m = arr.size();
    int n =arr[0].size();
    
    if(i==m-1 && j==n-1) return arr[i][j];
    if(i>=m || j>=n) return 1e9;
    if(dp[i][j]!=-1) return dp[i][j];
    
    int a = arr[i][j]+ fun(arr,i,j+1,dp);
    int b = arr[i][j]+ fun(arr,i+1,j,dp);
    
    return dp[i][j] = min(a,b);
}
int minSumPath(vector<vector<int>> &arr) {
    int m = arr.size();
    int n =arr[0].size();
    vector<vector<int>> dp(m,vector<int>(n,-1));
   // return fun(arr,0,0,dp);
    for(int i=0;i<m;i++){
        
        for(int j=0;j<n;j++){
            
            if(i==0 && j==0)
                dp[i][j] = arr[i][j];
            else{
                 //becz preVSUm
                 int up = arr[i][j];
                 int left = up;
                
                 if(i>0) up+=dp[i-1][j];
                 else up+=1e9;
                
                 if(j>0) left+=dp[i][j-1];
                 else left+=1e9;
                 
                 dp[i][j] = min(up,left);
            }
        }
    }
    return dp[m-1][n-1];
    
}
