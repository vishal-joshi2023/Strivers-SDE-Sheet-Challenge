void rec(TreeNode *root,vector<int> &ans){
    if(!root) return;
    rec(root->left,ans);
    rec(root->right,ans);
    ans.push_back(root->data);
}
vector<int> getPostOrderTraversal(TreeNode *root)
{
  vector<int> ans;
//   rec(root,ans);
//   return ans;

  if(!root) return ans;
  stack<TreeNode *> stk;
  stk.push(root);

  while(stk.size()){
      TreeNode* node = stk.top();
      stk.pop();
      
       //root 
      ans.push_back(node->data);
      //filo 
      if(node->left)
        stk.push(node->left); 
      if(node->right)
       stk.push(node->right); 
  }

  reverse(ans.begin(),ans.end());
  return ans;
}
