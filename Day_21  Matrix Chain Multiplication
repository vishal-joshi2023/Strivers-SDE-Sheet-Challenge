#include <bits/stdc++.h> 

int fun(int i,int j,vector<int> &arr, vector<vector<int>> &dp){

    //single matrix cordinate 
    if(i==j) 
      return 0;

    if(dp[i][j] != -1) return dp[i][j];

    int ans = INT_MAX;
    for(int k=i;k<j;k++){
        int partition = arr[i-1]*arr[k]*arr[j] + 
                        fun(i,k,arr,dp) +fun(k+1,j,arr,dp);
        ans = min(ans,partition);                 
    }

    return dp[i][j]=ans;


}

int matrixMultiplication(vector<int> &arr, int n)
{
    // vector<vector<int>> dp(n,vector<int>(n,-1));
    // return fun(1,n-1,arr,dp);

    vector<vector<int>> dp(n,vector<int>(n, 0 )); 
    for(int i=n-1;i>=1;i--){
      // j=i+1 bcz pratically i , k , j in order j is right of i 
      for(int j=i+1;j<n;j++){  
        int ans = INT_MAX;
        for(int k = i; k < j; k++) {
           int p = arr[i - 1] * arr[k] * arr[j] + dp[i][k]+ dp[k + 1] [j];
           ans = min(ans, p);
        } 

      dp[i][j] = ans;
      }
    }

    return dp[1][n-1];
}
