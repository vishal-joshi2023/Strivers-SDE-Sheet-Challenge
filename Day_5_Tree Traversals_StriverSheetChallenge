#include <bits/stdc++.h> 

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    
    stack<pair<BinaryTreeNode<int> *, int>> st;
    vector<vector<int>> ans(3);
    
    if(!root) return ans;
    
    st.push({root,1});

    while(st.size()){
     auto &p = st.top();
     st.pop();
     
     if(p.second==1){

        ans[1].push_back(p.first->data);
        p.second++;
        st.push(p);
        if(p.first->left)
          st.push({p.first->left, 1});

     }else if (p.second == 2) {

       ans[0].push_back(p.first->data);
       p.second++;
       st.push(p);
       if (p.first->right)
         st.push({p.first->right, 1});

     }else
       ans[2].push_back(p.first->data);
    }
    
    return ans;

}
